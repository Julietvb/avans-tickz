{"version":3,"file":"main.js","mappings":"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","sources":["webpack://avans-tickz/./apps/avans-tickz-api/src/app/app.controller.ts","webpack://avans-tickz/./apps/avans-tickz-api/src/app/app.module.ts","webpack://avans-tickz/./apps/avans-tickz-api/src/app/app.service.ts","webpack://avans-tickz/./apps/avans-tickz-api/src/app/entities/user/dto/create-user.dto.ts","webpack://avans-tickz/./apps/avans-tickz-api/src/app/entities/user/dto/update-user.dto.ts","webpack://avans-tickz/./apps/avans-tickz-api/src/app/entities/user/user.controller.ts","webpack://avans-tickz/./apps/avans-tickz-api/src/app/entities/user/user.module.ts","webpack://avans-tickz/./apps/avans-tickz-api/src/app/entities/user/user.repository.ts","webpack://avans-tickz/./apps/avans-tickz-api/src/app/entities/user/user.schema.ts","webpack://avans-tickz/./apps/avans-tickz-api/src/app/entities/user/user.service.ts","webpack://avans-tickz/external commonjs \"@nestjs/common\"","webpack://avans-tickz/external commonjs \"@nestjs/core\"","webpack://avans-tickz/external commonjs \"@nestjs/mongoose\"","webpack://avans-tickz/external commonjs \"mongoose\"","webpack://avans-tickz/external commonjs \"tslib\"","webpack://avans-tickz/webpack/bootstrap","webpack://avans-tickz/./apps/avans-tickz-api/src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { UserModule } from './entities/user/user.module';\n\n@Module({\n  imports: [MongooseModule.forRoot('mongodb://127.0.0.1:27017/avansTickz'), UserModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to avans-tickz-api!' };\n  }\n}\n","import {Types} from \"mongoose\";\r\n\r\nexport class CreateUserDto {\r\n    _id: Types.ObjectId;\r\n    firstName: string;\r\n    lastName: string;\r\n    birthDate: Date;\r\n    emailAdres: string;\r\n    password: string;\r\n}","import {Types} from \"mongoose\";\r\n\r\nexport class UpdateUserDto{\r\n    _id: Types.ObjectId;\r\n    firstName: string;\r\n    lastName: string;\r\n    birthDate: Date;\r\n    emailAdres: string;\r\n    password: string;\r\n}","import { Body, Controller, Get, Param, Patch, Post, Req, Type } from \"@nestjs/common\";\r\nimport { CreateUserDto } from \"./dto/create-user.dto\";\r\nimport { UpdateUserDto } from \"./dto/update-user.dto\";\r\nimport { User } from \"./user.schema\";\r\nimport { UserService } from \"./user.service\";\r\nimport { Types } from 'mongoose';\r\n\r\n\r\n@Controller('users')\r\nexport class UserController{\r\n    constructor(private readonly userService: UserService){}\r\n\r\n    @Get(':userId')\r\n    async getUser(@Param('userId') userId: string): Promise<User>{\r\n        console.log('getUser aangeroepen')\r\n        console.log(userId)\r\n        return await this.userService.getUserById(userId);\r\n    }\r\n\r\n    @Get()\r\n    async getUsers(): Promise<User[]> {\r\n        return this.userService.getAllUsers();\r\n    }\r\n\r\n    @Post()\r\n    async createUser(@Body() createUserDto: CreateUserDto): Promise<User> {\r\n        return this.userService.createUser(createUserDto._id, createUserDto.firstName, createUserDto.lastName, createUserDto.birthDate, createUserDto.emailAdres, createUserDto.password);\r\n    }\r\n\r\n    @Patch(':userId')\r\n    async updateUser(@Param('userId') userId: Types.ObjectId, @Body() updateUserDto: UpdateUserDto): Promise<User> {\r\n        return this.userService.updateUser(userId, updateUserDto);\r\n    }\r\n}","import { Module } from \"@nestjs/common\";\r\nimport { MongooseModule } from \"@nestjs/mongoose\";\r\nimport { UserController } from \"./user.controller\";\r\nimport { UserRepository } from \"./user.repository\";\r\nimport { User, UserSchema } from \"./user.schema\";\r\nimport { UserService } from \"./user.service\";\r\n\r\n@Module({\r\n    imports: [MongooseModule.forFeature([{name: User.name, schema: UserSchema}])],\r\n    controllers: [UserController],\r\n    providers: [UserService, UserRepository]\r\n})\r\n\r\nexport class UserModule{}","import { Injectable } from \"@nestjs/common\";\r\nimport { InjectModel } from \"@nestjs/mongoose\";\r\nimport { FilterQuery, Model } from \"mongoose\";\r\nimport { User, UserDocument } from \"./user.schema\";\r\nimport {Types} from \"mongoose\";\r\n\r\n@Injectable()\r\nexport class UserRepository{\r\n    constructor(@InjectModel(User.name) private userModel: Model<UserDocument>) {}\r\n\r\n    async findById(userId: string): Promise<User> {\r\n        console.log('repository findById aangeroepen')\r\n        return await this.userModel.findOne({_id: new Types.ObjectId(userId)})\r\n    }\r\n\r\n    async find(usersFilterQuery: FilterQuery<User>): Promise<User[]> {\r\n        return await this.userModel.find(usersFilterQuery)\r\n    }\r\n\r\n    async create(user: User): Promise<User> {\r\n        const newUser = new this.userModel(user);\r\n        return await newUser.save()\r\n    }\r\n\r\n    async findOneAndUpdate(userFilterQuery: FilterQuery<User>, user: Partial<User>): Promise<User> {\r\n        return await this.userModel.findOneAndUpdate(userFilterQuery, user, {new: true});\r\n    }\r\n}","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport {Types} from 'mongoose';\r\nimport { Document } from 'mongoose';\r\n\r\nexport type UserDocument = User & Document;\r\n\r\n@Schema()\r\nexport class User {\r\n  @Prop()\r\n  _id: Types.ObjectId;\r\n  \r\n  @Prop()\r\n  firstName: string;\r\n\r\n  @Prop()\r\n  lastName: string;\r\n\r\n  @Prop()\r\n  birthDate: Date;\r\n\r\n  @Prop()\r\n  emailAdres: string;\r\n\r\n  @Prop()\r\n  password: string;\r\n\r\n  @Prop([String])\r\n  favoriteArtists: string[];\r\n}\r\n\r\nexport const UserSchema = SchemaFactory.createForClass(User)\r\n","import { Injectable } from \"@nestjs/common\";\r\nimport { UpdateUserDto } from \"./dto/update-user.dto\";\r\nimport { UserRepository } from \"./user.repository\";\r\nimport { User } from \"./user.schema\";\r\nimport { Types} from 'mongoose';\r\n@Injectable()\r\nexport class UserService{\r\n    constructor(private readonly userRepository: UserRepository){}\r\n\r\n    getUserById(userId: string): Promise<User>{\r\n        console.log('service getById aangeroepen');\r\n        return this.userRepository.findById(userId)\r\n    }\r\n\r\n    getAllUsers(): Promise<User[]>{\r\n        return this.userRepository.find({})\r\n    }\r\n\r\n    createUser(_id: Types.ObjectId, firstName: string, lastName: string, birthDate: Date, emailAdres: string, password: string): Promise<User>{\r\n        return this.userRepository.create({\r\n            _id,\r\n            firstName,\r\n            lastName,\r\n            birthDate,\r\n            emailAdres,\r\n            password,\r\n            favoriteArtists: []\r\n        })\r\n    }\r\n\r\n    updateUser(userId: Types.ObjectId, userUpdates: UpdateUserDto): Promise<User> {\r\n        return this.userRepository.findOneAndUpdate({ _id: userId }, userUpdates)\r\n    }\r\n}","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"mongoose\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  app.enableCors()\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}